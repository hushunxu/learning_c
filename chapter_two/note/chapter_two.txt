第二章 类型、运算符与表达式
2.1变量名

变量命名：字母、数字、下划线，但第一个字符必须为字母。与php变量命名规则相同。

变量名使用小写字母，符号常量名全部使用大写。

2.2数据类型及长度

基本数据类型

char  字符型  占用一个字符

int   整型 通常代表特定机器中整数的自然长度

float  单精度浮点型

double 双精度浮点型

基本数据类型前面可以添加限定符，short和long两个限定符用于限定整型,如：
    short int sh;
    long  int count;

short通常为16位，long通常为32位。

类型限定符signed与unsigned可用于限定char类型或任何类型。

unsigned无符号，数总是正值或0，并遵守算术模2^n定律，n为该类型占用的位数。

signed有符号。

2.3常量

long类型的常量以字母L或l结尾，如12345L。

无符号常量以字母u或U结尾。后缀ul或UL表示unsigned  long类型。

浮点数常量包含一个小数点或一个指数，也可以两者都有。没有后缀的浮点数常量为double类型。

后缀f或F表示float类型，后缀l或L表示long double类型。

整型
   十进制
   八进制    前缀0的整型常量
   十六进制  前缀为0x或0X

一个字符常量是一个整数，书写时将一个字符括在单引号中，如'x',字符在机器字符集中的数值就是字符常量的值。

ANSI C语言中转义字符序列

\a 响铃符
\b 回退符
\f 换页符
\n 换行符
\r 回车符
\t 横向制表符
\v 纵向制表符
\\ 反斜杠
\? 问号
\' 单引号
\" 双引号
\ooo 八进制数
\xhh 十六进制数

字符串的内部标识使用一个空字符'\0'作为字符串的结尾，因此，存储字符串的存储单元数比括在双引号中的字符数多一个。

'x'与"x"是不同的，前者是一个整数，后者是一个包含一个字符(字母X)以及一个结束符('\0')的字符数组 

2.4声明

所有变量都必须先声明后使用。

2.5算术运算符

+ - * / %

%取模不能用于float和double类型

2.6关系运算符与逻辑运算符

关系运算符>  >=  <  <=

逻辑运算符  && || 

2.7类型转换

一般来说，自动转换是把"比较窄的"操作数转换为"比较宽的"操作数，并且不丢失信息的转换。

将字符型转为整型时要注意，C语言中没有指定char类型的变量是无符号变量还是带符号的变量。

如果二元运算符（具有两个操作数的运算符，如+和*）的两个操作数具有不同的类型，在进行运算之前要把"较低"的类型提升为"较高"的类型。运算结果为较高的类型。

赋值时也要进行类型转换，赋值运算符右边的值要转换为左边变量的类型。

2.8自增运算符与自减运算符

++ --

++n与n++,效果都是将变量n的值+1，但++n先将n的值+1，然后再使用n的值；n++则是先使用n的值，然后+1。如n=5，那么

x = n++; 执行后x = 5

x = ++n; 执行后x = 6

